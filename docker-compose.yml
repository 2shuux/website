version: '3.4'

services:

  web:
    build:
      context: .
    command: ['/app/manage.py', 'runserver', '0.0.0.0:8000']
    volumes:
      - type: volume
        source: media
        target: /app/media
        volume:
          nocopy: true
      - type: bind
        source: .
        target: /app
    ports:
      - "8000:8000"
    restart: on-failure
    environment:
      - REDIS_HOST: cache
    stdin_open: true
    tty: true
    depends_on:
      - db
      - cache

  celery_worker:
    build:
      context: .
    volumes:
      - type: volume
        source: media
        target: /app/media
        volume:
          nocopy: true
    depends_on:
      - db
      - cache
    command: celery worker -A lutrisweb.celery.app -B -l info

  db:
    image: postgres:12
    ports:
      - "5432:5432"
    volumes:
      - postgresql:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: 'lutris'
      POSTGRES_USER: 'lutris'
      POSTGRES_PASSWORD: 'admin'

  cache:
    restart: on-failure
    image: redis:6.0.1
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data


volumes:
  postgresql:
  media:
  redisdata:
